// Mocks generated by Mockito 5.4.5 from annotations
// in nemorixpay/test/features/crypto/data/repositories/crypto_market_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:nemorixpay/features/crypto/data/datasources/crypto_market_datasource.dart'
    as _i4;
import 'package:nemorixpay/features/crypto/data/models/crypto_asset_with_market_data_model.dart'
    as _i3;
import 'package:nemorixpay/features/crypto/data/models/market_data_model.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMarketDataModel_0 extends _i1.SmartFake
    implements _i2.MarketDataModel {
  _FakeMarketDataModel_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeCryptoAssetWithMarketDataModel_1 extends _i1.SmartFake
    implements _i3.CryptoAssetWithMarketDataModel {
  _FakeCryptoAssetWithMarketDataModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(parent, parentInvocation);
}

/// A class which mocks [CryptoMarketDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockCryptoMarketDataSource extends _i1.Mock
    implements _i4.CryptoMarketDataSource {
  MockCryptoMarketDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<List<_i3.CryptoAssetWithMarketDataModel>> getCryptoAssets() =>
      (super.noSuchMethod(
            Invocation.method(#getCryptoAssets, []),
            returnValue:
                _i5.Future<List<_i3.CryptoAssetWithMarketDataModel>>.value(
                  <_i3.CryptoAssetWithMarketDataModel>[],
                ),
          )
          as _i5.Future<List<_i3.CryptoAssetWithMarketDataModel>>);

  @override
  _i5.Future<List<_i3.CryptoAssetWithMarketDataModel>>
  getCryptoAccountAssets() =>
      (super.noSuchMethod(
            Invocation.method(#getCryptoAccountAssets, []),
            returnValue:
                _i5.Future<List<_i3.CryptoAssetWithMarketDataModel>>.value(
                  <_i3.CryptoAssetWithMarketDataModel>[],
                ),
          )
          as _i5.Future<List<_i3.CryptoAssetWithMarketDataModel>>);

  @override
  _i5.Future<_i2.MarketDataModel> getMarketData(String? symbol) =>
      (super.noSuchMethod(
            Invocation.method(#getMarketData, [symbol]),
            returnValue: _i5.Future<_i2.MarketDataModel>.value(
              _FakeMarketDataModel_0(
                this,
                Invocation.method(#getMarketData, [symbol]),
              ),
            ),
          )
          as _i5.Future<_i2.MarketDataModel>);

  @override
  _i5.Future<_i3.CryptoAssetWithMarketDataModel> getCryptoAssetDetails(
    String? symbol,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getCryptoAssetDetails, [symbol]),
            returnValue: _i5.Future<_i3.CryptoAssetWithMarketDataModel>.value(
              _FakeCryptoAssetWithMarketDataModel_1(
                this,
                Invocation.method(#getCryptoAssetDetails, [symbol]),
              ),
            ),
          )
          as _i5.Future<_i3.CryptoAssetWithMarketDataModel>);

  @override
  _i5.Future<_i2.MarketDataModel> updateMarketData(String? symbol) =>
      (super.noSuchMethod(
            Invocation.method(#updateMarketData, [symbol]),
            returnValue: _i5.Future<_i2.MarketDataModel>.value(
              _FakeMarketDataModel_0(
                this,
                Invocation.method(#updateMarketData, [symbol]),
              ),
            ),
          )
          as _i5.Future<_i2.MarketDataModel>);
}
